import{P as v,Q as x,T as C,V as q,W as B,X as y,Y as S,Z as i,$ as l}from"./index--nVTC40K.js";class _ extends v{constructor(e){super(),this._api=e}Process(e,t){return Promise.resolve(this._api(e,t))}}const A=(r,e,t,n)=>[...t,n].map(o=>o.init({app:r,commands:e})).reduceRight((o,h)=>h.SetNext(o));class E{statusCode=200;headers={};body;get ok(){return this.statusCode==200}get status(){return this.statusCode}set status(e){this.statusCode=e}setHeader(e,t){this.headers[e]=t}redirect(e){window.location.replace(e)}send(e){this.body=e}end(e){this.body||(this.body=e)}blob(){return Promise.resolve(this.body)}arrayBuffer(){return Promise.resolve(this.body)}buffer(){return Promise.resolve(this.body)}json(){return this.body?.buffer?Promise.resolve(JSON.parse(this.body)):Promise.resolve(this.body)}text(){return Promise.resolve(this.body?.toString())}}const M=async(r,e,t,n,o,h)=>{const c=x(r),a=new E,f=await C(),p=q(f),d=B(p,c);if(!d){const s=`Route ${c} was not found`,u=new Error(s);return y.err("command not found",u,"cmd",{body:e}),a.statusCode=404,a.send(s),a}Object.entries(r.query).filter(([,s])=>!!s).forEach(([s,u])=>r.query[s]=decodeURIComponent(u));const w={headers:{},query:r.query,body:j(e)},P=new _(async(s,u)=>{const b=await f.contextFactory.fromBrowser(S.parsePath(window.location.pathname)?.language,{}),g=d.params(b,s.query,s.body);y.info(`executing command ${c}`,"cmd",{...s.query});const m=await d.do(g);h?.(c,s.query,m),await I(f,s,u,d.kind,m)});return await A(f,p,d.middlewares,P).Process(w,a),a},j=r=>{if(r==="")return r;if(r){if(typeof r!="string")return r;try{return JSON.parse(r)}catch{return r}}},I=async(r,e,t,n,o)=>{if(n!=i.none){if(n==i.json)return l.sendJson(t,o);if(n==i.plain)return l.sendPlainText(t,o);if(n==i.blob)return t.send(await o?.hashItem?.getContentAsBinary());if(n==i.file)return t.send(o);if(n==i.redirect)return t.redirect(o);if(n==i.html)return t.send(o);throw new Error("Invalid ResponseKind")}};export{M as default};
